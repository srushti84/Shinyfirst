library(shiny)
library(shiny)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
shinyServer(
function(input, output) {
}
)
# Load the shiny package
library(shiny)
# Define UI for the shiny application here
shinyUI(fluidPage(
# fluid pages scale their components in realtime to fill all available browser width.
# Header Panel : Create a header panel containing an application title.
titlePanel(title = "Hello Shiny, this is title panel"),
# SidebarLayout():It creates a layout with a sidebar and main area.
sidebarLayout(
# Sidebar panel
sidebarPanel(h2("this is the sidebarpanel for input widgets 2"),
h3("this is the sidebarpanel for input widgets 3"),
h4("this is the sidebarpanel for input widgets 4"),
h5("this is the sidebarpanel for input widgets 5")
),
# Main Panel
mainPanel(h2("this is the main panel for display of output"),
h3("this is the main panel for display of output"),
h4("this is the main panel for display of output"),
h5("this is the main panel for display of output")
)
)
)
)
# Load the shiny package
library(shiny)
# Define UI for the shiny application here
shinyUI(fluidPage(
# fluid pages scale their components in realtime to fill all available browser width.
# Header Panel : Create a header panel containing an application title.
titlePanel(title = "Hello Shiny, this is title panel"),
# SidebarLayout():It creates a layout with a sidebar and main area.
sidebarLayout(
# Sidebar panel
sidebarPanel(h2("this is the sidebarpanel for input widgets 2"),
h3("this is the sidebarpanel for input widgets 3"),
h4("this is the sidebarpanel for input widgets 4"),
h5("this is the sidebarpanel for input widgets 5")
),
# Main Panel
mainPanel(h2("this is the main panel for display of output"),
h3("this is the main panel for display of output"),
h4("this is the main panel for display of output"),
h5("this is the main panel for display of output")
)
)
)
)
runApp('server.R')
runApp('server.R')
ui <- fluidPage(titlePanel("Addition Demo"),
sidebarLayout(
sidebarPanel(
numericInput("n1", "First number", 0),
numericInput("n2", "Second number", 0),
actionButton("add", "Add Numbers")
),
mainPanel(textOutput(outputId = "n1_plus_n2"))
))
runApp('shiny1')
ui <- fluidPage(titlePanel("Addition Demo"),
sidebarLayout(
sidebarPanel(
numericInput("n1", "First number", 0),
numericInput("n2", "Second number", 0),
actionButton("add", "Add Numbers")
),
mainPanel(textOutput(outputId = "n1_plus_n2"))
))
